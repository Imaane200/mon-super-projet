# docker-compose.yml
services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: "rootpassword"
      MYSQL_DATABASE: bibliotheque_2ie
      MYSQL_USER: appuser
      MYSQL_PASSWORD: "apppassword"
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mon-reseau
    # Correction: suppression de --skip-password-validation qui n'existe pas
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-container
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=bibliotheque_2ie
      - DB_USER=appuser
      - DB_PASSWORD=apppassword
    networks:
      - mon-reseau
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-container
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3001:3000"
    environment:
      # IMPORTANT: Dans Docker, utilisez le nom du service backend
      - NEXT_PUBLIC_API_URL=http://backend:8000
      # Pour les requêtes côté serveur (SSR)
      - API_URL=http://backend:8000
    networks:
      - mon-reseau

volumes:
  mysql-data:

networks:
  mon-reseau:
    driver: bridge